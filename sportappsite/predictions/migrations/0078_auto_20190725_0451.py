# Generated by Django 2.0.2 on 2019-07-25 04:51

from django.db import migrations, models
import sportappsite.constants

from sportappsite import constants


def set_format_values(apps, schema_editor):
    t_map = {
        4: constants.MatchTypes.T_TWENTY.value,
        5: constants.MatchTypes.ONE_DAY.value,
    }

    Tournament = apps.get_model("fixtures.Tourament")
    GroupSubmissionsConfig = apps.get_model("predictions.GroupSubmissionsConfig")

    for t_id, t_format in t_map.items():
        try:
            t = Tournament.objects.get(id=t_id)
            for gs in GroupSubmissionsConfig.objects.filter(tournament=t):
                gs.tournament_format = t_format
                gs.save()
        except Tournament.DoesNotExist:
            pass


class Migration(migrations.Migration):

    dependencies = [
        ("members", "0051_membership_active"),
        ("fixtures", "0043_auto_20190720_0525"),
        ("predictions", "0077_auto_20190715_0650"),
    ]

    operations = [
        migrations.AddField(
            model_name="groupsubmissionsconfig",
            name="active_from",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="groupsubmissionsconfig",
            name="active_to",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="groupsubmissionsconfig",
            name="tournament_format",
            field=models.IntegerField(
                choices=[
                    (sportappsite.constants.MatchTypes(1), "One Day"),
                    (sportappsite.constants.MatchTypes(2), "T-20"),
                    (sportappsite.constants.MatchTypes(3), "Test match"),
                ],
                default=sportappsite.constants.MatchTypes(2),
            ),
        ),
        migrations.AddField(
            model_name="membertournamentprediction",
            name="format",
            field=models.IntegerField(
                choices=[
                    (sportappsite.constants.MatchTypes(1), "One Day"),
                    (sportappsite.constants.MatchTypes(2), "T-20"),
                    (sportappsite.constants.MatchTypes(3), "Test match"),
                ],
                default=sportappsite.constants.MatchTypes(2),
            ),
        ),
        migrations.AlterUniqueTogether(
            name="groupsubmissionsconfig",
            unique_together={
                ("tournament", "submission_type", "member_group", "tournament_format")
            },
        ),
    ]
