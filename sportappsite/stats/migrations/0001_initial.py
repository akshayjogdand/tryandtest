# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-03-19 08:03
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("rules", "0001_initial"),
        ("fixtures", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="BattingPerformance",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("position", models.IntegerField(default=0)),
                ("runs", models.IntegerField(default=0)),
                ("balls", models.IntegerField(default=0)),
                ("zeros", models.IntegerField(default=0)),
                ("ones", models.IntegerField(default=0)),
                ("twos", models.IntegerField(default=0)),
                ("threes", models.IntegerField(default=0)),
                ("fours", models.IntegerField(default=0)),
                ("fives", models.IntegerField(default=0)),
                ("sixes", models.IntegerField(default=0)),
                ("seven_plus", models.IntegerField(default=0)),
                (
                    "was_out",
                    models.IntegerField(
                        choices=[(1, "Out"), (2, "Not Out"), (3, "Did Not Bat")],
                        default=0,
                    ),
                ),
                ("strike_rate", models.FloatField(blank=True, default=0.0)),
                (
                    "dismissal",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (1, "Bowled"),
                            (2, "Caught"),
                            (3, "Not Out"),
                            (4, "Retired Hurt"),
                            (5, "Timed Out"),
                            (6, "Handled"),
                            (7, "Hit Twice"),
                            (8, "Hit Wicket"),
                            (9, "LBW"),
                            (10, "Obstructing Field"),
                            (11, "Stumped"),
                            (12, "Run Out"),
                        ],
                        null=True,
                    ),
                ),
                (
                    "bowler",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="bowler",
                        to="fixtures.Player",
                    ),
                ),
                (
                    "fielder",
                    models.ManyToManyField(
                        blank=True,
                        related_name="_battingperformance_fielder_+",
                        to="fixtures.Player",
                    ),
                ),
                (
                    "match",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="fixtures.Match"
                    ),
                ),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="fixtures.Player",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BowlingPerformance",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("overs", models.IntegerField(default=0)),
                ("balls", models.IntegerField(default=0)),
                ("maiden", models.IntegerField(default=0)),
                ("runs", models.IntegerField(default=0)),
                ("wickets", models.IntegerField(default=0)),
                ("extras", models.IntegerField(default=0)),
                ("dot_balls", models.IntegerField(default=0)),
                ("fours", models.IntegerField(default=0)),
                ("sixes", models.IntegerField(default=0)),
                ("hat_tricks", models.IntegerField(default=0)),
                ("economy", models.FloatField(blank=True, default=0.0)),
                (
                    "match",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="fixtures.Match"
                    ),
                ),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="fixtures.Player",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FieldingPerformance",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("catches", models.IntegerField(default=0)),
                ("stumpings", models.IntegerField(default=0)),
                ("runouts", models.IntegerField(default=0)),
                (
                    "match",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="fixtures.Match"
                    ),
                ),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="fixtures.Player",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="MatchPerformance",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("last_run", models.BooleanField(default=False)),
                ("last_wicket", models.BooleanField(default=False)),
                ("man_of_the_match", models.BooleanField(default=False)),
                ("max_fours_hit", models.BooleanField(default=False)),
                ("max_sixes_hit", models.BooleanField(default=False)),
                ("is_captain", models.BooleanField(default=False)),
                ("is_wicketkeeper", models.BooleanField(default=False)),
                (
                    "match",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="fixtures.Match"
                    ),
                ),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="fixtures.Player",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PlayerScores",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("scored_on", models.DateTimeField(auto_now_add=True)),
                ("total_scores", models.IntegerField(default=0)),
                (
                    "detailed_scoring",
                    models.ManyToManyField(to="rules.PlayerScoringResult"),
                ),
                (
                    "match",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="fixtures.Match"
                    ),
                ),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="fixtures.Player",
                    ),
                ),
            ],
            options={"verbose_name_plural": "Player scores",},
        ),
    ]
